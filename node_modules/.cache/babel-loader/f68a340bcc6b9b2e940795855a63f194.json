{"ast":null,"code":"import _objectSpread from \"/home/lucaswerner/repositories/github-personal/starwars/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/lucaswerner/repositories/github-personal/starwars/src/components/ColumnSelector.js\";\nimport React, { useContext } from 'react';\nimport { StarWarsContext } from '../context/StarWarsContext';\n\nconst ColumnSelector = () => {\n  const _useContext = useContext(StarWarsContext),\n        filters = _useContext.filters,\n        numericFilter = _useContext.numericFilter,\n        setNumericFilter = _useContext.setNumericFilter;\n\n  const columns = ['rotation_period', 'orbital_period', 'diameter', 'surface_water', 'population'];\n  const selectedColumn = filters.map(el => el.numericValues ? el.numericValues.column : false);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"selector-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Choose a column:\"), React.createElement(\"select\", {\n    name: \"column\",\n    \"data-testid\": \"column-selector\",\n    onChange: ({\n      target: {\n        name,\n        value\n      }\n    }) => setNumericFilter(_objectSpread({}, numericFilter, {\n      [name]: value\n    })),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    label: \" \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), columns.map(element => selectedColumn.includes(element) ? false : React.createElement(\"option\", {\n    value: element,\n    key: element,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, element.replace('_', ' ')))));\n};\n\nexport default ColumnSelector;","map":{"version":3,"sources":["/home/lucaswerner/repositories/github-personal/starwars/src/components/ColumnSelector.js"],"names":["React","useContext","StarWarsContext","ColumnSelector","filters","numericFilter","setNumericFilter","columns","selectedColumn","map","el","numericValues","column","target","name","value","element","includes","replace"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,eAAT,QAAgC,4BAAhC;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA,sBAC0BF,UAAU,CAACC,eAAD,CADpC;AAAA,QACnBE,OADmB,eACnBA,OADmB;AAAA,QACVC,aADU,eACVA,aADU;AAAA,QACKC,gBADL,eACKA,gBADL;;AAE3B,QAAMC,OAAO,GAAG,CAAC,iBAAD,EAAoB,gBAApB,EAAsC,UAAtC,EAAkD,eAAlD,EAAmE,YAAnE,CAAhB;AACA,QAAMC,cAAc,GAAGJ,OAAO,CAACK,GAAR,CAAaC,EAAD,IACjCA,EAAE,CAACC,aAAH,GAAmBD,EAAE,CAACC,aAAH,CAAiBC,MAApC,GAA6C,KADxB,CAAvB;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,mBAAY,iBAFd;AAGE,IAAA,QAAQ,EAAE,CAAC;AACTC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR;AADC,KAAD,KAEJT,gBAAgB,mBAAMD,aAAN;AAAqB,OAACS,IAAD,GAAQC;AAA7B,OALxB;AAME,IAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAiB,IAAA,KAAK,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASGR,OAAO,CAACE,GAAR,CAAaO,OAAD,IACXR,cAAc,CAACS,QAAf,CAAwBD,OAAxB,IACI,KADJ,GAEI;AAAQ,IAAA,KAAK,EAAEA,OAAf;AAAwB,IAAA,GAAG,EAAEA,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuCA,OAAO,CAACE,OAAR,CAAgB,GAAhB,EAAqB,GAArB,CAAvC,CAHL,CATH,CAFF,CADF;AAoBD,CAzBD;;AA2BA,eAAef,cAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { StarWarsContext } from '../context/StarWarsContext';\n\nconst ColumnSelector = () => {\n  const { filters, numericFilter, setNumericFilter } = useContext(StarWarsContext);\n  const columns = ['rotation_period', 'orbital_period', 'diameter', 'surface_water', 'population'];\n  const selectedColumn = filters.map((el) => (\n    el.numericValues ? el.numericValues.column : false));\n  return (\n    <div>\n      <span className=\"selector-label\">Choose a column:</span>\n      <select\n        name=\"column\"\n        data-testid=\"column-selector\"\n        onChange={({\n          target: { name, value },\n        }) => setNumericFilter({ ...numericFilter, [name]: value })}\n        required\n      >\n        <option value=\"\" label=\" \" />\n        {columns.map((element) => (\n          selectedColumn.includes(element)\n            ? false\n            : <option value={element} key={element}>{element.replace('_', ' ')}</option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default ColumnSelector;\n"]},"metadata":{},"sourceType":"module"}