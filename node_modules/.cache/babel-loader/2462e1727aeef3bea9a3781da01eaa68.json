{"ast":null,"code":"import _slicedToArray from\"/home/lucaswerner/repositories/github-personal/starwars/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext,useEffect}from'react';import{StarWarsContext}from'../context/StarWarsContext';import SearchBar from'./SearchBar';import Selectors from'./Selectors';import'./Table.css';import fetchPlanets from'../services/fetchPlanets';import SortButton from'./SortButton';import mock from'../mocks/resultsMock';function renderTableHead(planets){return React.createElement(\"thead\",null,React.createElement(\"tr\",null,Object.keys(planets[0]||[]).map(function(key){return key==='residents'?false:React.createElement(\"th\",{key:key,className:\"table-head-cell\"},key.replace(/_/,' ').toUpperCase(),React.createElement(SortButton,{currentColumn:key}));})));}function renderTableBody(planets){return React.createElement(\"tbody\",null,planets.map(function(planet){return React.createElement(\"tr\",{key:planet.name},Object.entries(planet).map(function(_ref){var _ref2=_slicedToArray(_ref,2),key=_ref2[0],value=_ref2[1];return key==='residents'?false:React.createElement(\"td\",{key:value,\"data-testid\":\"planets-infos\"},value);}));}));}var Table=function Table(){var _useContext=useContext(StarWarsContext),filteredData=_useContext.filteredData,filters=_useContext.filters,data=_useContext.data,setData=_useContext.setData;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),isFetching=_useState2[0],setIsFetching=_useState2[1];var planets=filters[0].name||filters[1]?filteredData:data;useEffect(function(){if(!data.length){fetchPlanets().then(function(_ref3){var results=_ref3.results;setIsFetching(false);setData(results.sort(function(a,b){return a.name>b.name?1:-1;}));}).catch(function(){setIsFetching(false);setData(mock.results);});}},[data.length,setData]);if(isFetching)return React.createElement(\"div\",{className:\"spinner\",\"data-testid\":\"loading\"});if(data==='API fora do ar')return React.createElement(\"div\",{style:{color:'white'}},data);return React.createElement(\"section\",null,React.createElement(\"section\",null,React.createElement(SearchBar,null)),React.createElement(\"section\",null,React.createElement(Selectors,null)),React.createElement(\"table\",null,renderTableHead(data),renderTableBody(planets)));};export default Table;","map":{"version":3,"sources":["/home/lucaswerner/repositories/github-personal/starwars/src/components/Table.js"],"names":["React","useState","useContext","useEffect","StarWarsContext","SearchBar","Selectors","fetchPlanets","SortButton","mock","renderTableHead","planets","Object","keys","map","key","replace","toUpperCase","renderTableBody","planet","name","entries","value","Table","filteredData","filters","data","setData","isFetching","setIsFetching","length","then","results","sort","a","b","catch","color"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { StarWarsContext } from '../context/StarWarsContext';\nimport SearchBar from './SearchBar';\nimport Selectors from './Selectors';\nimport './Table.css';\nimport fetchPlanets from '../services/fetchPlanets';\nimport SortButton from './SortButton';\nimport mock from '../mocks/resultsMock';\n\nfunction renderTableHead(planets) {\n  return (\n    <thead>\n      <tr>\n        {Object.keys(planets[0] || []).map((key) => (\n          key === 'residents'\n            ? false\n            : (\n              <th key={key} className=\"table-head-cell\">\n                {key.replace(/_/, ' ').toUpperCase()}\n                <SortButton currentColumn={key} />\n              </th>\n            )\n        ))}\n      </tr>\n    </thead>\n  );\n}\n\nfunction renderTableBody(planets) {\n  return (\n    <tbody>\n      {planets.map((planet) => (\n        <tr key={planet.name}>\n          {Object.entries(planet).map(([key, value]) => (\n            key === 'residents'\n              ? false\n              : <td key={value} data-testid=\"planets-infos\">{value}</td>\n          ))}\n        </tr>\n      ))}\n    </tbody>\n  );\n}\n\nconst Table = () => {\n  const { filteredData, filters, data, setData } = useContext(StarWarsContext);\n  const [isFetching, setIsFetching] = useState(true);\n  const planets = (filters[0].name || filters[1]) ? filteredData : data;\n\n  useEffect(() => {\n    if (!data.length) {\n      fetchPlanets()\n        .then(({ results }) => {\n          setIsFetching(false);\n          setData(results.sort((a, b) => (a.name > b.name ? 1 : -1)));\n        })\n        .catch(() => {\n          setIsFetching(false);\n          setData(mock.results);\n        });\n    }\n  }, [data.length, setData]);\n\n  if (isFetching) return <div className=\"spinner\" data-testid=\"loading\" />;\n  if (data === 'API fora do ar') return <div style={{ color: 'white' }}>{data}</div>;\n  return (\n    <section>\n      <section><SearchBar /></section>\n      <section><Selectors /></section>\n      <table>\n        {renderTableHead(data)}\n        {renderTableBody(planets)}\n      </table>\n    </section>\n  );\n};\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}